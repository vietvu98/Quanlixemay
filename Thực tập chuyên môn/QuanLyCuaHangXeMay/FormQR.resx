<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnKetNoi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        U45OajXPAAAAAElFTkSuQmCC
</value>
  </data>
</root>